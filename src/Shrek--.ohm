Shrek {
  Program
    = Statement (";"  Statement)* ";"?
   
  Statement = Declaration
    | Assignment
    | DataType
    | Call
    | Exp
 
  DataType = Structure
  	| List
    | stringLiteral
   
  Structure = ogre "{" Program? "}"
      
  List = "<"  (Statement+ ("," Statement)*)? ">"
   
  Assignment = id "~" (DataType | Exp)	--byValue
  	| id "->" id	--byReference
  
  Declaration = (enchanted | cursed)? id ":" (Exp | DataType)	--assignment
  	| (enchanted | cursed) id	--declare
  	
   
  Call = id "(" (Exp+ ("," Exp)*)? ")"
   
  id = ~keyword letter(letter | digit | "_")*
   
  Exp = AddExp
    | stringLiteral
    | id
    | Call
   
  stringLiteral = "\"" (~"\"" any)* "\""

  AddExp = AddExp "+" MulExp  -- plus
    | AddExp "-" MulExp  -- minus
    | MulExp

  MulExp = MulExp "*" ExpExp  -- times
    | MulExp "/" ExpExp  -- divide
    | ExpExp

  ExpExp = PriExp "**" ExpExp  -- power
    | PriExp
    | "-" PriExp   -- neg

  PriExp = "(" Exp ")"  -- paren
    | "+" PriExp   -- pos
    | Call
    | id
    | number


  number  (a number) = digit* "." digit+  -- fract
    | digit+             -- whole
   
  keyword = ogre
  
  ogre = "ogre"
  
  enchanted = "enchanted"
  
  cursed = "cursed"
  space    += "\\" (~"\n" any)* "\n"	--comment
  }